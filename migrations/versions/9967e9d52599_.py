"""empty message

Revision ID: 9967e9d52599
Revises: 47e310ef85b4
Create Date: 2016-12-19 19:58:22.863631

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9967e9d52599'
down_revision = '47e310ef85b4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('pickup_date',
    sa.Column('pickupDateId', sa.Integer(), nullable=False),
    sa.Column('pickupDate', sa.String(length=40), nullable=False),
    sa.Column('openTime', sa.DateTime(), nullable=False),
    sa.Column('closeTime', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('pickupDateId')
    )
    op.create_table('user',
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('emailAddress', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=1024), nullable=True),
    sa.PrimaryKeyConstraint('userId'),
    sa.UniqueConstraint('emailAddress'),
    sa.UniqueConstraint('name')
    )
    op.drop_table('PickupDate')
    op.drop_table('User')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('User',
    sa.Column('userId', sa.INTEGER(), server_default=sa.text(u'nextval(\'"User_userId_seq"\'::regclass)'), nullable=False),
    sa.Column('name', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('emailAddress', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=1024), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('userId', name=u'User_pkey'),
    sa.UniqueConstraint('emailAddress', name=u'User_emailAddress_key'),
    sa.UniqueConstraint('name', name=u'User_name_key')
    )
    op.create_table('PickupDate',
    sa.Column('pickupDateId', sa.INTEGER(), server_default=sa.text(u'nextval(\'"PickupDate_pickupDateId_seq"\'::regclass)'), nullable=False),
    sa.Column('pickupDate', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('openTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('closeTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('pickupDateId', name=u'PickupDate_pkey')
    )
    op.drop_table('user')
    op.drop_table('pickup_date')
    # ### end Alembic commands ###
